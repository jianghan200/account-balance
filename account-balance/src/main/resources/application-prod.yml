endpoint:
  accountBalanceService: http://account-balance:8082

server:
  port: 8082
  tomcat:
    threads:
      # The default value 200 is too high which would slow down the application.
      # TPS will increase from 250 to 400 by changing the value to around 8 to 16 (based on CPU cores).
      max: 8
    connection-timeout: 20s
    max-keep-alive-requests: 100

spring:
  application:
    name: account-balance
  datasource:
    url: jdbc:postgresql://${SECRET_DB_HOST}:5432/balance?useSSL=false&useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true
    username: ${SECRET_DB_USERNAME}
    password: ${SECRET_DB_PASSWORD}
    #    we should not provide password here, should use secret and env parameter, this db is only for demo
    hikari:
      connection-timeout: 2000
  cache:
    type: redis
    redis:
      enable-statistics: true
  jpa:
    open-in-view: false
  task:
    scheduling:
      pool:
        size: 4
      simple:
        concurrency-limit: 8
  data:
    redis:
      url: redis://:${SECRET_REDIS_PASSWORD}@${SECRET_REDIS_HOST}:6379/0
      #    we should not provide password here, should use secret and env parameter, this db is only for demo

service:
  lock:
    timeout: 10s

logging:
  level:
    org:
      apache:
        kafka:
          clients:
            # Avoid unnecessary noice from Kafka client.
            NetworkClient: WARN
      hibernate:
        engine:
          jdbc:
            spi: WARN
      springframework:
        retry:
          support: INFO
