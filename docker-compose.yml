services:
  account-balance-service:
    image: account-balance:0.0.1-SNAPSHOT
    ports:
      - "8082:8082"
      - "5006:5005"
    environment:
      - DB_HOST=postgres
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - JAVA_TOOL_OPTIONS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
    depends_on:
      - redis
      - postgres

  postgres:
    image: "postgres:17-alpine"
    hostname: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=account
      - POSTGRES_PASSWORD=postgres
    command: [ "postgres", "-c", "wal_level=logical" ]
    volumes:
      - ./tmp/pgdata:/var/lib/postgresql/data

  connect:
    # Only 3.0 support PG 17.0
    image: debezium/connect:3.0.0.Final
    ports:
      - "8083:8083"
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=debezium_connect_configs
      - OFFSET_STORAGE_TOPIC=debezium_connect_offsets
      - STATUS_STORAGE_TOPIC=debezium_connect_statuses
    depends_on:
      - kafka
    volumes:
      - ./config:/config/kafka-connect

  redis:
    image: "redis:7-alpine"
    hostname: redis
    ports:
      - "6379:6379"
    restart: unless-stopped

  zookeeper:
    image: zookeeper:3.8.4
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.8.0
    platform: linux/amd64
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,LOCAL://0.0.0.0:29092
      # When it is used for local, `localhost` shall be used.
      # When it is used within docker, `kafka` shall be used.
      # Use 9092 from docker host, 29092 from local host
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,LOCAL://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LOCAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      # This docker-compose defined only 1 broker, so the replication factor is 1.
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
